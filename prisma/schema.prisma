// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  // provider = "postgresql"
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Cargos {
  id          Int      @id @default(autoincrement())
  cargo       String @unique
  registro    DateTime @default(now())
  atualizacao DateTime @updatedAt()

  usuarios Usuarios[]
}

model Naipes {
  id Int @id @default(autoincrement())
  naipe String @unique
  registro    DateTime @default(now())
  atualizacao DateTime @updatedAt()

  usuarios Usuarios[]
}

model Usuarios {
  id String @id @default(uuid())
  nome String
  sobrenome String?
  email String @unique
  senha String

  cargoId Int
  cargo Cargos @relation(fields: [cargoId], references: [id])

  naipeId Int
  naipe Naipes @relation(fields: [naipeId], references: [id])

  dtCadastro DateTime @default(now())
  dtAtualizacao DateTime @updatedAt()
}

model Escalas {
  id Int @id @default(autoincrement())
  ministro String
  sopranos String
  contraltos String
  tenores String
  tecladistas String
  violonista String
  guitarrista String
  baixista String
  baterista String
  culto DateTime
  dtAtualizacao DateTime @updatedAt()
}

model Louvores {
  id Int @id @default(autoincrement())
  nome String 
  link String?
  dtCadastro DateTime @default(now())
  dtAtualizacao DateTime? @updatedAt()
}